<?php
// $Id$
/*
 * Drupal Module: GoogleAnalytics
 * Adds the required Javascript to the bottom of all your Drupal pages
 * to allow tracking by the Google Analytics statistics package.
 *
 * @author: Mike Carter <www.ixis.co.uk/contact>
 */


function googleanalytics_help($section) {
  switch ($section) {
    case 'admin/settings/googleanalytics':
      return t('Google Analytics is a free statistics package based on the excellent Urchin system.');
  }
}


function googleanalytics_menu($maycache) {
  $items = array();
  if ($maycache) {
    $items[] = array(
      'path' => 'admin/settings/googleanalytics',
      'title' => t('Google Analytics'),
      'description' => t('Configure the settings used to generate your Google Analytics site map.'),
      'callback' => 'drupal_get_form',
      'callback arguments' => 'googleanalytics_admin_settings',
      'access' => user_access('administer site configuration'),
      'type' => MENU_NORMAL_ITEM,
    );
  }
  return $items;
}


/**
 * Implementation of hook_footer()  to insert Javascript at the end of the page
 */
function googleanalytics_footer($main = 0) {
  global $user;

  $id = variable_get('googleanalytics_account', '');

  // Check if we should track the currently active user's role
  $track = TRUE;
  foreach(array_keys($user->roles) as $role) {
    if (variable_get("googleanalytics_track_". $role, FALSE)) {
      $track = FALSE;
    }
  }

  if ($user->uid == 1 and variable_get("googleanalytics_track__user1", FALSE)) {
    $track = FALSE;
  }

  // Don't track page views in the admin sections
  if($id && (arg(0) != 'admin') && $track == TRUE) {

    $prefix = '://www';

    // Are we on a secure page?
    if(isset($_SERVER['HTTPS']) && !empty($_SERVER['HTTPS']) && (strtolower($_SERVER['HTTPS']) != 'off')) {
      $prefix = 's://ssl';
    }

    // Add User profile segmentation values
    if(is_array($profile_fields = variable_get('googleanalytics_segmentation', '')) && ($user->uid > 0)) {

      $p = module_invoke('profile', 'load_profile', $user);

      $fields = array();
      foreach($profile_fields as $field => $title) {
        $value = $user->$field;

        if(is_array($value)) {
          $value = implode(',', $value);
        }

        $fields[$field] = utf8_encode(addslashes($value));
      }

      // Only show segmentation variable if there are specified fields
      if(count($fields) > 0) {
        $segmentation = "__utmSetVar('".implode(':', $fields)."');";
      }
		}

		// Add any custom code snippets if specified
		$codesnippet = variable_get('googleanalytics_codesnippet', '');

    $script = '<script type="text/javascript" src="http' . $prefix . ".google-analytics.com/urchin.js\"></script>\n";
    $script .= '<script type="text/javascript">' . "\n_uacct = \"".$id."\";urchinTracker();{$segmentation}{$codesnippet}\n</script>\n";
    return $script;
  }
}


/**
 * Implementation of hook_admin_settings() for configuring the module
 */
function googleanalytics_admin_settings() {
  $form['account'] = array(
        '#type' => 'fieldset',
        '#title' => t('Analytics Account Settings'),
        '#collapsible' => FALSE,
      );

  $form['account']['googleanalytics_account'] = array(
      '#type' => 'textfield',
      '#title' => t('User ID'),
      '#default_value' => variable_get('googleanalytics_account','UA-'),
      '#size' => 15,
      '#maxlength' => 20,
      '#required' => TRUE,
      '#description' => t('The user account is unique to the websites domain. You can obtain a user account from the <a href="@url">Google Analytics</a> website.', array('@url' => 'http://www.google.com/analytics/'))    );

   // Render the role overview.
  $result = db_query('SELECT * FROM {role} ORDER BY name');

  $form['roles'] = array(
        '#type' => 'fieldset',
        '#title' => t('User Role Tracking'),
        '#collapsible' => TRUE,
        '#description' => t('Define what user roles should not be tracked by Google Analytics.')
  );

  $form['roles']["googleanalytics_track__user1"] = array(
    '#type' => 'checkbox',
    '#title' => t("Admin (user 1)"),
    '#default_value' => variable_get("googleanalytics_track__user1", TRUE),
	);

  while ($role = db_fetch_object($result)) {
     // can't use empty spaces in varname
    $role_varname = $string = str_replace(' ', '_', $role->name);
    $form['roles']["googleanalytics_track_". $role->rid] = array(
       '#type' => 'checkbox',
       '#title' => t($role->name),
       '#default_value' => variable_get("googleanalytics_track_". $role->rid, FALSE),
    );
  }

  $form['segmentation'] = array(
        '#type' => 'fieldset',
        '#title' => t('User Segmentation'),
        '#collapsible' => TRUE,
        '#description' => t('If your users have profile fields completed, you can track your logged in users based on a defined profile field.')
  );

  if(!module_exists('profile')) {
    $form['segmentation']['profile'] = array(
      '#type' => 'markup',
      '#value' => t('You need to activate the !profile to use this feature.', array('!profile' => l(t('Profile module'), 'admin/build/modules')) ),
      '#prefix' => '<p>',
      '#suffix' => '</p>'
      );
  } else {
    // Compile a list of fields to show.
    $fields = array('uid' => t('User ID'), 'name' => t('Username'), 'roles' => t('User Roles'));
    $result = db_query('SELECT name, title, type, weight FROM {profile_fields} ORDER BY weight');
    while ($record = db_fetch_object($result)) {
      $fields[$record->name] = $record->title;
    }

    $form['segmentation']["googleanalytics_segmentation"] = array(
      '#type' => 'select',
      '#title' => t('Track'),
      '#description' => t('Selecting one or more values allows you to track users by profile values rather than simply an IP address. To select multiple items, hold down CTRL whilst selecting fields.'),
      '#default_value' => variable_get("googleanalytics_segmentation", ''),
      '#options' => $fields,
      '#size' => 10,
      '#multiple' => TRUE
    );
  }

  $form['advanced'] = array(
        '#type' => 'fieldset',
        '#title' => t('Advanced'),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
        '#description' => t('You can add custom Google Analytic code here.')
  );
  $form['advanced']['googleanalytics_codesnippet'] = array(
      '#type' => 'textarea',
      '#title' => t('JavaScript Code'),
      '#default_value' => variable_get('googleanalytics_codesnippet',''),
      '#rows' => 15,
      '#description' => t('Paste <a href="@snippets">custom code snippets here</a>. These will be added to every page that Google Analytics appears on. For help with this feature see the <a href="@blog">cutroni.com blog</a>. <strong>Do not include the &lt;script&gt; tags</strong>, and always end your code with a semicolon (;).', array('@snippets' => 'http://drupal.org/node/39282', '@blog' => 'http://cutroni.com/blog/') )   );

  return system_settings_form($form);
}

/**
 * Implementation of hook_requirements().
 */
function googleanalytics_requirements($phase) {
  $requirements = array();

  if ($phase == 'runtime') {
    // Raise warning if Google user account has not been set yet.
    if (variable_get('googleanalytics_account', 'UA-') == 'UA-') {
      $requirements['googleanalytics'] = array(
        'title' => t('Google Analytics module'),
        'description' => t('Google Analytics module has not been configured yet. Please configure its settings from the <a href="@url">Google Analytics settings page</a>.', array('@url' => url('admin/settings/googleanalytics'))),
        'severity' => REQUIREMENT_ERROR,
        'value' => t('Not configured'),
      );
    }
  }

  return $requirements;
}