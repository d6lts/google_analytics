<?php

/**
 * @file
 * Installation file for Google Analytics module.
 */

/**
 * Implements hook_install().
 */
/* TODO: use Migrate module
function google_analytics_install() {
  // #1967410: Undefined function update_variables_to_config() in hook_install().
  require_once DRUPAL_ROOT . '/core/includes/update.inc';

  // Migrate settings from previous Google Analytics version.
  update_variables_to_config('google_analytics.settings', array(
    'googleanalytics_account' => 'account',
    'googleanalytics_cache' => 'cache',
    'googleanalytics_codesnippet_before' => 'codesnippet.before',
    'googleanalytics_codesnippet_after' => 'codesnippet.after',
    'googleanalytics_cross_domains' => 'cross_domains',
    //'googleanalytics_custom_var' => 'custom_var',
    'googleanalytics_domain_mode' => 'domain_mode',
    'googleanalytics_js_scope' => 'js_scope',
    'googleanalytics_pages' => 'visibility.pages',
    'googleanalytics_roles' => 'visibility.roles',
    'googleanalytics_site_search' => 'track.site_search',
    'googleanalytics_trackadsense' => 'track.adsense',
    'googleanalytics_trackdoubleclick' => 'track.doubleclick',
    'googleanalytics_trackmessages' => 'track.messages',
    'googleanalytics_tracker_anonymizeip' => 'privacy.anonymizeip',
    'googleanalytics_trackfiles' => 'track.files',
    'googleanalytics_trackfiles_extensions' => 'track.files_extensions',
    'googleanalytics_trackmailto' => 'track.mailto',
    'googleanalytics_trackoutbound' => 'track.outbound',
    'googleanalytics_translation_set' => 'translation_set',
    'googleanalytics_visibility_pages' => 'visibility.pages_enabled',
    'googleanalytics_visibility_roles' => 'visibility.roles_enabled',
    'googleanalytics_privacy_donottrack' => 'privacy.donottrack',
  ));

  // Remove the 'googleanalytics' directory and cached files.
  file_unmanaged_delete_recursive('public://googleanalytics');

  // Remove backup variables if exist. No migration required.
  update_variable_del('googleanalytics_last_cache');
  update_variable_del('googleanalytics_codesnippet_after_backup_6300');
  update_variable_del('googleanalytics_codesnippet_before_backup_6300');
  update_variable_del('googleanalytics_segmentation');
} */

/**
 * Implements hook_uninstall().
 *
 * Remove cache directory if module is uninstalled.
 */
function google_analytics_uninstall() {
  google_analytics_clear_js_cache();
}

/**
 * Implements hook_requirements().
 */
function google_analytics_requirements($phase) {
  $requirements = array();

  if ($phase == 'runtime') {
    $config = \Drupal::config('google_analytics.settings');

    // Raise warning if Google user account has not been set yet.
    if (!preg_match('/^UA-\d{4,}-\d+$/', $config->get('account'))) {
      $requirements['google_analytics_account'] = array(
        'title' => t('Google Analytics module'),
        'description' => t('Google Analytics module has not been configured yet. Please configure its settings from the <a href="@url">Google Analytics settings page</a>.', array('@url' => url('admin/config/system/google-analytics'))),
        'severity' => REQUIREMENT_WARNING,
        'value' => t('Not configured'),
      );
    }
    // Raise warning if debugging is enabled.
    if ($config->get('debug')) {
      $requirements['google_analytics_debugging'] = array(
        'title' => t('Google Analytics module'),
        'description' => t('Google Analytics module has debugging enabled. Please disable debugging setting in production sites from the <a href="@url">Google Analytics settings page</a>.', array('@url' => url('admin/config/system/google-analytics'))),
        'severity' => REQUIREMENT_WARNING,
        'value' => t('Debugging enabled'),
      );
    }


  }

  return $requirements;
}

/**
 * Run D6 -> D7 upgrades.
 */
function googleanalytics_update_7000() {
  // Update JavaScript scope to 'header'.
  update_variable_set('googleanalytics_js_scope', 'header');
  $messages[] = t('Google tracking code has been moved to header.');

  // Upgrade D6 token placeholder to D7. update_6301 is not required.
  $googleanalytics_custom_vars = update_variable_get('googleanalytics_custom_var', array());
  if (!empty($googleanalytics_custom_vars['slots'][1]) && $googleanalytics_custom_vars['slots'][1]['name'] == 'User roles' && $googleanalytics_custom_vars['slots'][1]['value'] = '[user-role-names]') {
    $googleanalytics_custom_vars['slots'][1]['value'] = '[current-user:role-names]';
    update_variable_set('googleanalytics_custom_var', $googleanalytics_custom_vars);
    $messages[] = t("The D6 token placeholder [user-role-names] used in the custom variable 'User roles' has been replaced with [current-user:role-names].");
  }

  return implode(' ', $messages);
}

/**
 * Automatically enable anonymizing of IP addresses for Germany.
 */
function googleanalytics_update_7001() {
  // By German law it's always best to enable the anonymizing of IP addresses.
  $countries = array(
    'DE',
  );
  if (in_array(update_variable_get('site_default_country', ''), $countries)) {
    update_variable_set('googleanalytics_tracker_anonymizeip', 1);
    return t('The default country in your regional settings is Germany. Anonymizing of IP addresses has been enabled for privacy reasons.');
  }
  else {
    return t('The default country in your regional settings is <em>not</em> Germany. The anonymizing of IP addresses setting has not been changed. Make sure your site settings comply with the local privacy rules.');
  }
}

/**
 * Upgrade "User roles" tracking to custom variables.
 */
function googleanalytics_update_7002() {

  // Read previous segmentation settings.
  $segmentation = update_variable_get('googleanalytics_segmentation', array());

  // If this is an upgrade from D6 the slot 1 may not empty.
  if (empty($googleanalytics_custom_vars['slots'][1]) && in_array('roles', $segmentation)) {
    // Upgrade previous segmentation settings to new custom variables settings.
    $googleanalytics_custom_vars = update_variable_get('googleanalytics_custom_var', array());

    $googleanalytics_custom_vars['slots'][1]['slot'] = 1;
    $googleanalytics_custom_vars['slots'][1]['name'] = 'User roles';
    $googleanalytics_custom_vars['slots'][1]['value'] = '[current-user:role-names]';
    $googleanalytics_custom_vars['slots'][1]['scope'] = 1; // Sets the scope to visitor-level.

    update_variable_set('googleanalytics_custom_var', $googleanalytics_custom_vars);
    return t('The deprecated profile segmentation setting for "User roles" has been added to custom variables. You need to deselect all selected profile fields in <a href="@admin">Google Analytics settings</a> and upgrade other profile fields manually or you may loose tracking data in future! See Google Analytics <a href="@customvar">Custom Variables</a> for more information.', array('@customvar' => 'https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingCustomVariables', '@admin' => url('admin/config/system/googleanalytics')));
  }
  else {
    return t('You need to deselect all selected profile fields in <a href="@admin">Google Analytics settings</a> and upgrade other profile fields manually or you may loose tracking data in future! See Google Analytics <a href="@customvar">Custom Variables</a> for more information.', array('@customvar' => 'https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingCustomVariables', '@admin' => url('admin/config/system/googleanalytics')));
  }
}

/**
 * Rename googleanalytics_trackoutgoing variable to googleanalytics_trackoutbound.
 */
function googleanalytics_update_7003() {
  update_variable_set('googleanalytics_trackoutbound', update_variable_get('googleanalytics_trackoutgoing', 1));
  update_variable_del('googleanalytics_trackoutgoing');

  return t('Renamed "googleanalytics_trackoutgoing" settings variable to googleanalytics_trackoutbound.');
}

/**
 * Rename googleanalytics_visibility variable to googleanalytics_visibility_pages for consistency.
 */
function googleanalytics_update_7004() {
  update_variable_set('googleanalytics_visibility_pages', update_variable_get('googleanalytics_visibility', 1));
  update_variable_del('googleanalytics_visibility');

  return t('Renamed "googleanalytics_visibility" settings variable to googleanalytics_visibility_pages.');
}

/**
 * Path visibility filter setting should hide "batch" path.
 */
function googleanalytics_update_7005() {
  // Current pages setting.
  $pages = array(
    'admin',
    'admin/*',
    'user/*/*',
    'node/add*',
    'node/*/*',
  );

  $diff = array_diff($pages, preg_split('/(\r\n?|\n)/', update_variable_get('googleanalytics_pages', implode("\n", $pages))));
  if (empty($diff)) {
    // No diff to previous settings found. Update with new settings.
    $pages = array(
      'admin',
      'admin/*',
      'batch',
      'node/add*',
      'node/*/*',
      'user/*/*',
    );
    update_variable_set('googleanalytics_pages', implode("\n", $pages));
    return t('Added "batch" to path visibility filter setting.');
  }
  else {
    return t('Custom path visibility filter setting found. Update skipped!');
  }
}

/**
 * Delete obsolete trackOutboundAsPageview variable.
 */
function googleanalytics_update_7006() {
  update_variable_del('googleanalytics_trackoutboundaspageview');

  return t('Deleted obsolete trackOutboundAsPageview variable.');
}

/**
 * Delete obsolete googleanalytics_trackpageloadtime variable.
 */
function googleanalytics_update_7007() {
  update_variable_del('googleanalytics_trackpageloadtime');

  return t('Deleted obsolete googleanalytics_trackpageloadtime variable.');
}
